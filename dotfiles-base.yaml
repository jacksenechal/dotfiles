---
- name: dotfiles
  hosts: all
  tasks:
    - block: # Update apt cache only once for the block, not for each task
      - name: Download GitHub CLI keyring
        become: true
        shell: "curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg"
        changed_when: false
      - name: Create GitHub CLI repository configuration
        become: true
        lineinfile:
          path: /etc/apt/sources.list.d/github-cli.list
          line: "deb [arch={{ ansible_architecture }} signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main"
          create: yes
        notify: Update apt cache

      - name: Install the required packages
        become: yes
        ansible.builtin.apt:
          pkg:
          - neovim
          - tmux
          - rsync
          - git
          - silversearcher-ag
          - ripgrep
          - tree
          - zsh
          - keychain
          - universal-ctags
          - nodejs
          - curl
          - gh
        notify: Update apt cache

    - name: Copy config files into place
      ansible.posix.synchronize:
        src: files/home/
        dest: ~/
        recursive: yes
        perms: yes
        # rsync_opts:
        #   - '--ignore-existing'

    - name: Fetch ohmyzsh
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
        dest: /tmp/ohmyzsh-install.sh
    - name: Install ohmyzsh
      ansible.builtin.shell: sh /tmp/ohmyzsh-install.sh --unattended
      args:
        creates: ~/.oh-my-zsh


    - name: Replace line in /etc/pam.d/chsh
      become: true
      ansible.builtin.lineinfile:
        path: /etc/pam.d/chsh
        regexp: '^auth\s+required\s+pam_shells.so$'
        line: 'auth       sufficient   pam_shells.so'
        backup: yes
    - name: Change default shell to zsh
      become: true
      ansible.builtin.command: chsh -s "/usr/bin/zsh" {{ ansible_user }}

    - name: Clone fzf
      ansible.builtin.git:
        repo: https://github.com/junegunn/fzf.git
        dest: ~/.fzf
        clone: yes
        force: no
        depth: 1
    - name: Install fzf
      ansible.builtin.shell: ~/.fzf/install --all --no-update-rc --no-bash --no-fish
      args:
        creates: ~/.fzf/bin/fzf

    - name: Make VIM dirs
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - ~/.tmp/undo
        - ~/.tmp/backup
        - ~/.tmp/swap
        - ~/.tmp/fzf-history
        - ~/.local/bin
        - ~/.local/go
        - ~/.local/share/nvim/site/pack/all/start
        - ~/.local/share/nvim/site/pack/all/opt
    - name: Clone VIM plugins
      ansible.builtin.git:
        repo: "{{ item.repo }}"
        dest: "~/.local/share/nvim/site/pack/all/{{ item.dest }}"
        clone: yes
        force: no
        depth: 1
      loop:
        - repo: https://github.com/scrooloose/nerdtree
          dest: start/nerdtree
        - repo: https://github.com/vim-scripts/candycode.vim
          dest: start/candycode
        - repo: https://github.com/endel/vim-github-colorscheme
          dest: start/github-colorscheme
        - repo: https://github.com/NLKNguyen/papercolor-theme
          dest: start/papercolor-theme
        - repo: https://github.com/tpope/vim-commentary
          dest: start/vim-commentary
        - repo: https://github.com/tpope/vim-surround
          dest: start/vim-surround
        - repo: https://github.com/alvan/vim-closetag
          dest: start/vim-closetag
        - repo: https://github.com/junegunn/fzf
          dest: start/fzf
        - repo: https://github.com/junegunn/fzf.vim
          dest: start/fzf.vim
        - repo: https://github.com/tpope/vim-fugitive
          dest: start/vim-fugitive
        - repo: https://github.com/tpope/vim-rhubarb
          dest: start/vim-rhubarb
        - repo: https://github.com/christoomey/vim-tmux-navigator
          dest: start/vim-tmux-navigator
        - repo: https://github.com/hashivim/vim-terraform
          dest: start/vim-terraform
        - repo: https://github.com/ludovicchabant/vim-gutentags
          dest: start/vim-gutentags
        - repo: https://github.com/plasticboy/vim-markdown
          dest: start/vim-markdown
        - repo: https://github.com/github/copilot.vim
          dest: start/copilot.vim
        # - repo: https://github.com/nvim-treesitter/nvim-treesitter
        #   dest: start/nvim-treesitter
        # note: opt plugins are not loaded automatically
        # note: if you move something here, delete it manually from start/
        #       ... and vice versa
        - repo: https://github.com/hashivim/vim-packer
          dest: opt/vim-packer
        - repo: https://github.com/hashivim/vim-vaultproject
          dest: opt/vim-vaultproject
        - repo: https://github.com/pearofducks/ansible-vim
          dest: opt/ansible-vim
        - repo: https://github.com/godlygeek/tabular
          dest: opt/tabular
        - repo: https://github.com/reedes/vim-pencil
          dest: opt/vim-pencil

    - name: Create temporary awscli directory
      ansible.builtin.tempfile:
        state: directory
        suffix: awscli
      register: awscli_dir
    - name: Unzip AWS CLI
      ansible.builtin.unarchive:
        src: "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip"
        dest: "{{ awscli_dir.path }}"
        remote_src: yes
    - name: Install AWS CLI
      become: true
      ansible.builtin.command: "sudo {{ awscli_dir.path }}/aws/install --bin-dir /usr/local/bin --install-dir /usr/local/aws-cli --update"

    - name: Set up kubectl
      become: true
      ansible.builtin.get_url:
        url: https://storage.googleapis.com/kubernetes-release/release/v1.26.4/bin/linux/amd64/kubectl
        dest: /usr/local/bin/kubectl
        mode: '0755'

    - name: Check if kctx exists
      ansible.builtin.command: "kubectl ctx"
      environment:
        PATH: "{{ ansible_env.PATH }}:/home/{{ ansible_user }}/.krew/bin"
      register: kctx_result
      ignore_errors: true
    - block:
      - name: Create temporary krew directory
        ansible.builtin.tempfile:
          state: directory
          suffix: krew
        register: krew_dir
      - name: Download krew
        ansible.builtin.unarchive:
          src: "https://github.com/kubernetes-sigs/krew/releases/latest/download/krew-linux_amd64.tar.gz"
          dest: "{{ krew_dir.path }}"
          remote_src: yes
      - name: Install krew for kubectl
        become: true
        ansible.builtin.command: "{{ krew_dir.path }}/krew-linux_amd64 install krew"
      - name: Set up kctx and kns
        become: true
        ansible.builtin.command: "kubectl krew install ctx ns"
        environment:
          PATH: "{{ ansible_env.PATH }}:/home/{{ ansible_user }}/.krew/bin"
      when: kctx_result.rc != 0


  handlers:
    - name: Update apt cache
      become: true
      ansible.builtin.apt:
        update_cache: yes
